# Common make file for building installers
#
# IsCmdBld.exe commandline options:
#	-a <product configuration>
#	-b Output directory
#	-n								No compile
#	-p <ISM file>
#	-q3                             Only compile setup.rul
#	-r <release name>
#	-x								Stop on error
#	-y <product version>


#
# Prepare environment
#

CURRENT_MKFILE_PATH    := $(abspath $(lastword $(MAKEFILE_LIST)))
CURRENT_MKFILE_DIRPATH := $(dir $(CURRENT_MKFILE_PATH))

XLIB_DIR=$(NLBUILDROOT)/xlib
XLIB_JRE32_DIR=$(XLIB_DIR)/jre_x86
XLIB_JRE64_DIR=$(XLIB_DIR)/jre_x64

ifeq ($(ProgramW6432), )
	ENV_OS=x86
	PROGRAM_FILES_X86=C:/Program Files
else
	ENV_OS=x64
	PROGRAM_FILES_X86=C:/Program Files (x86)
endif

PROGRAM_FILES_X86_DOS=$(subst /,\,$(PROGRAM_FILES_X86))

PERL=/usr/bin/perl
ISCMDBLD=$(PROGRAM_FILES_X86)/InstallShield/2014 SAB/System/IsCmdBld.exe
SIGNTOOL_OFFICIAL_TOOL=$(PROGRAM_FILES_X86)/Windows Kits/8.1/bin/x64/signtool.exe
SIGNTOOL_OFFICIAL_ARGS=sign /ac C:/release/bin/DigiCertAssuredIDRootCA.cer /f C:/release/bin/NextLabs.pfx /p IiVf1itvOrqJ /n "NextLabs Inc." /t http://timestamp.digicert.com /fd sha256
SIGNTOOL_OFFICIAL='$(SIGNTOOL_OFFICIAL_TOOL)' $(SIGNTOOL_OFFICIAL_ARGS)

OFFICIALCERT=0
VERSION_BUILD_SHORT=$(firstword $(subst -, ,$(VERSION_BUILD)))

INSTALL_DIR=$(NLBUILDROOT)/install/scripts/$(PRODUCT_DIR_NAME)
SCRIPT_DIR=$(NLBUILDROOT)/install/scripts
INSTALL_BUILD_DIR=$(INSTALL_DIR)/build
ASSEMBLY_DIR=$(INSTALL_BUILD_DIR)/data
OUTPUT_DIR=$(INSTALL_BUILD_DIR)/output
PACKAGE64_DIR=$(INSTALL_BUILD_DIR)/package64
PACKAGE_FILE64=$(basename $(MSI_FILE64))-64-$(VERSION_STR)-$(VERSION_BUILD_SHORT)-$(shell date +"%Y%m%d%H%M").zip
PUBLISH_DIR=$(NLBUILDROOT)/bin/installer
BUILD_DIR=$(subst /,\,$(ASSEMBLY_DIR))
DEPLOY_DIR=$(subst /,\,$(OUTPUT_DIR))

TARGETS=

ifneq ($(ISM_PRODUCT_CONFIG64), )
	TARGETS+= installer64
endif


#
# Print environment
#

$(info -----------------------------------------------------------------------------)
$(info BUILDTYPE                   = $(BUILDTYPE))
$(info VERSION_BUILD               = $(VERSION_BUILD))
$(info VERSION_BUILD_SHORT         = $(VERSION_BUILD_SHORT))
$(info BUILD_NUMBER                = $(BUILD_NUMBER))
$(info Product directory name      = $(PRODUCT_DIR_NAME))
$(info Packaging list              = $(PACKAGE_LIST))
$(info Install directory           = $(INSTALL_DIR))
$(info Assembly directory          = $(ASSEMBLY_DIR))
$(info Output directory            = $(OUTPUT_DIR))
$(info Package directory (64-bit)  = $(PACKAGE64_DIR))
$(info Package file (64-bit)       = $(PACKAGE_FILE64))
$(info Publish directory           = $(PUBLISH_DIR))
$(info Current OS                  = $(ENV_OS))
$(info Program files (x86)         = $(PROGRAM_FILES_X86))
$(info Program files (x86) DOS     = $(PROGRAM_FILES_X86_DOS))
$(info ISM template file name      = $(ISM_TEMPLATE_FILE_NAME))
$(info ISM release                 = $(ISM_RELEASE))
$(info ISM product config (64-bit) = $(ISM_PRODUCT_CONFIG64))
$(info ISM output directory        = $(DEPLOY_DIR))
$(info -----------------------------------------------------------------------------)


#
# Targets
#

.PHONY: all
all: assembly $(TARGETS) publish
	
.PHONY: assembly
assembly:
	@echo "INFO: Prepare WFSE assembly"
	@rm -rf $(INSTALL_BUILD_DIR)
	@mkdir -p $(INSTALL_BUILD_DIR)
	mkdir -p $(CURRENT_MKFILE_DIRPATH)/installer/release_win_x64
	cd $(NLBUILDROOT)/bin/x64 ; cp nlwfse/* nlwfsedll.* $(CURRENT_MKFILE_DIRPATH)/installer/release_win_x64/
	cd $(XLIB_DIR)/pc_7.7.5/install/pc/build/data ; tar cf - java jre_x64 jre_x86 release_dotnet release_win_x64 release_win_x86 resource resource32 resource64 | ( cd $(CURRENT_MKFILE_DIRPATH)/installer ; tar xf - )
	cd $(XLIB_DIR)/pc_8.3.0.1000/install/pcoe/installer ; tar cf - . | ( cd $(CURRENT_MKFILE_DIRPATH)/installer ; tar xf - )
	mkdir -p $(CURRENT_MKFILE_DIRPATH)/installer/jre_x64 ; cd $(XLIB_JRE32_DIR)/jre_1.7.0_71/x64 ; tar cf - . | ( cd $(CURRENT_MKFILE_DIRPATH)/installer/jre_x64 ; tar xf - )
	mkdir -p $(CURRENT_MKFILE_DIRPATH)/installer/jre_x86 ; cd $(XLIB_JRE32_DIR)/jre_1.7.0_71/x86 ; tar cf - . | ( cd $(CURRENT_MKFILE_DIRPATH)/installer/jre_x86 ; tar xf - )
	cd $(NLBUILDROOT)/ ; cp nlwfsedll/nlwfsedll.cfg $(CURRENT_MKFILE_DIRPATH)/installer/resource64
	cd $(NLBUILDROOT)/ ; cp install/scripts/wfse/$(ISM_TEMPLATE_FILE_NAME) $(CURRENT_MKFILE_DIRPATH)/installer/$(ISM_TEMPLATE_FILE_NAME)
	cd $(NLBUILDROOT)/ ; C:/Windows/syswow64/cscript.exe //nologo build/ISAutoGUIDVersion.js $(CURRENT_MKFILE_DIRPATH)/installer/$(ISM_TEMPLATE_FILE_NAME) $(VERSION_STR).$(BUILD_NUMBER)

.PHONY: installer64
installer64:
	@echo "INFO: Compile 64-bit installer"
	@mkdir -p $(ASSEMBLY_DIR)
	@chmod -R +w $(ASSEMBLY_DIR)
	export BUILD_DIR="$(BUILD_DIR)" ; \
	export DEPLOY_DIR="$(DEPLOY_DIR)" ; \
	'$(ISCMDBLD)' -x -r Media_MSI -p "$(CURRENT_MKFILE_DIRPATH)/installer/$(ISM_TEMPLATE_FILE_NAME)" -b "$(DEPLOY_DIR)"
	@if [ $(OFFICIALCERT) -ne 0 ]; then \
		echo "INFO: Signing $(MSI_FILE64) msi file" ; \
		echo "'$(SIGNTOOL_OFFICIAL_TOOL)' $(SIGNTOOL_OFFICIAL_ARGS) $(OUTPUT_DIR)/CompliantEnterprisex64/Media_MSI/DiskImages/DISK1/$(MSI_FILE64)" ; \
		'$(SIGNTOOL_OFFICIAL_TOOL)' $(SIGNTOOL_OFFICIAL_ARGS) $(OUTPUT_DIR)/CompliantEnterprisex64/Media_MSI/DiskImages/DISK1/$(MSI_FILE64) ; \
	fi

.PHONY: clean
clean:
	@rm -rf build

.PHONY: publish
publish:
	@echo "INFO: Publish installer packages"
	@if [ "$(MSI_FILE64)" != "" ]; then \
		echo "INFO:   Create 64-bit installer package" ; \
		mkdir -p $(PACKAGE64_DIR) ; \
		cp -pf $(OUTPUT_DIR)/CompliantEnterprisex64/Media_MSI/DiskImages/DISK1/$(MSI_FILE64) $(PACKAGE64_DIR)/$(TARGETMSI_FILE64_NAME) ; \
		cd $(NLBUILDROOT)/ ; cp install/scripts/commprofile.xml $(PACKAGE64_DIR) ; \
		cd $(PACKAGE64_DIR); zip ../$(PACKAGE_FILE64) * ; \
	fi
	@if [ ! -d $(PUBLISH_DIR) ]; then \
		mkdir -p $(PUBLISH_DIR)	; \
	fi
	cp -pf $(INSTALL_BUILD_DIR)/*.zip $(PUBLISH_DIR)
	@echo "INFO:   Content of $(PUBLISH_DIR)"
	@ls -al $(PUBLISH_DIR)
